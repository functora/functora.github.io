cabal-version:      3.0
name:               xlsx
version:            1.1.2.2
synopsis:           Simple and incomplete Excel file parser/writer
description:
  This library can help you to get some data read and written in Office
  Open XML xlsx format. Small subset of xlsx format is supported.
  .
  For examples look into "Codec.Xlsx".
  .
  Format is covered by ECMA-376 standard:
  <https://ecma-international.org/publications-and-standards/standards/ecma-376/>
  .
  4th edition of the standard with the transitional schema is used for this library.

extra-source-files:
  CHANGELOG.markdown
  data/floats.xlsx
  data/inline-strings.xlsx

homepage:           https://github.com/qrilka/xlsx
bug-reports:        https://github.com/qrilka/xlsx/issues
license:            MIT
license-file:       LICENSE
author:             Tim, Max, Kirill Zaborsky
maintainer:         qrilka@gmail.com
category:           Codec
build-type:         Simple
tested-with:        GHC ==9.0.2 || ==9.2.8 || ==9.4.5 || ==9.6.2

flag microlens
  default:     False
  description: Use microlens instead of lens

flag ghcid
  default:     False
  description: Run dev ghcid shell

common ext
  default-extensions:
    AllowAmbiguousTypes
    DataKinds
    DeriveGeneric
    DerivingStrategies
    FlexibleContexts
    OverloadedLabels
    TypeApplications

common pkg
  hs-source-dirs:   src
  build-depends:
    , attoparsec
    , base               >=4.9.0.0  && <5.0
    , base64-bytestring
    , binary-search
    , bytestring         >=0.10.8.0
    , conduit            >=1.0.0
    , containers         >=0.5.0.0
    , data-default
    , deepseq            >=1.4
    , dlist
    , errors
    , exceptions
    , extra
    , filepath
    , generic-lens
    , hexpat
    , monad-control
    , mtl                >=2.1
    , network-uri
    , old-locale         >=1.0.0.5
    , profunctors
    , safe               >=0.3
    , text               >=0.11.3.1
    , time               >=1.4.0.1
    , transformers       >=0.3.0.0
    , transformers-base
    , vector             >=0.10
    , xeno               >=0.3.2
    , xml-conduit        >=1.1.0
    , xml-types
    , zip
    , zip-archive        >=0.2
    , zip-stream         >=0.2.0.1
    , zlib               >=0.5.4.0

  if flag(microlens)
    build-depends:
      , indexed-traversable
      , microlens            >=0.4 && <0.5
      , microlens-ghc
      , microlens-mtl
      , microlens-platform
      , microlens-th

    cpp-options:   -DUSE_MICROLENS

  else
    build-depends: lens >=3.8 && <5.4

  default-language: Haskell2010
  other-extensions:
    DeriveDataTypeable
    FlexibleInstances
    NoMonomorphismRestriction
    OverloadedStrings
    RankNTypes
    RecordWildCards
    TupleSections

library
  import:          ext
  import:          pkg
  ghc-options:     -Wall
  exposed-modules:
    Codec.Xlsx
    Codec.Xlsx.Formatted
    Codec.Xlsx.Lens
    Codec.Xlsx.Parser
    Codec.Xlsx.Parser.Internal
    Codec.Xlsx.Parser.Internal.Fast
    Codec.Xlsx.Parser.Internal.PivotTable
    Codec.Xlsx.Parser.Internal.Util
    Codec.Xlsx.Parser.Stream
    Codec.Xlsx.Types
    Codec.Xlsx.Types.AutoFilter
    Codec.Xlsx.Types.Cell
    Codec.Xlsx.Types.Comment
    Codec.Xlsx.Types.Common
    Codec.Xlsx.Types.ConditionalFormatting
    Codec.Xlsx.Types.DataValidation
    Codec.Xlsx.Types.Drawing
    Codec.Xlsx.Types.Drawing.Chart
    Codec.Xlsx.Types.Drawing.Common
    Codec.Xlsx.Types.Internal
    Codec.Xlsx.Types.Internal.CfPair
    Codec.Xlsx.Types.Internal.CommentTable
    Codec.Xlsx.Types.Internal.ContentTypes
    Codec.Xlsx.Types.Internal.CustomProperties
    Codec.Xlsx.Types.Internal.DvPair
    Codec.Xlsx.Types.Internal.FormulaData
    Codec.Xlsx.Types.Internal.Relationships
    Codec.Xlsx.Types.Internal.SharedStringTable
    Codec.Xlsx.Types.PageSetup
    Codec.Xlsx.Types.PivotTable
    Codec.Xlsx.Types.PivotTable.Internal
    Codec.Xlsx.Types.Protection
    Codec.Xlsx.Types.RichText
    Codec.Xlsx.Types.SheetViews
    Codec.Xlsx.Types.StyleSheet
    Codec.Xlsx.Types.Table
    Codec.Xlsx.Types.Variant
    Codec.Xlsx.Writer
    Codec.Xlsx.Writer.Internal
    Codec.Xlsx.Writer.Internal.PivotTable
    Codec.Xlsx.Writer.Internal.Stream
    Codec.Xlsx.Writer.Stream

  -- The only function it exports is also hidden by the upstream library: https://github.com/the-real-blackh/hexpat/blob/master/Text/XML/Expat/SAX.hs#L227
  -- We could expose it but then this function is in the xlsx API for a long time.
  -- It be better to expose it in the upstream library instead I think. It was copied here so the parser can use it.
  other-modules:
    Codec.Xlsx.Parser.Internal.Memoize
    Codec.Xlsx.Parser.Stream.HexpatInternal

test-suite data-test
  import:           ext

  if flag(ghcid)
    import: pkg

  else
    build-depends: xlsx

  type:             exitcode-stdio-1.0
  main-is:          Main.hs
  hs-source-dirs:   test/
  other-modules:
    AutoFilterTests
    Common
    CommonTests
    CommonTests.CellRefTests
    CondFmtTests
    Diff
    DrawingTests
    PivotTableTests
    StreamTests
    Test.SmallCheck.Series.Instances
    TestXlsx

  build-depends:
    , base
    , bytestring
    , conduit
    , containers
    , deepseq
    , Diff              >=0.3.0
    , directory
    , filepath
    , generic-lens
    , groom
    , mtl
    , raw-strings-qq
    , smallcheck
    , tasty
    , tasty-hunit
    , tasty-smallcheck
    , text
    , time
    , vector
    , xml-conduit       >=1.1.0
    , zip

  if flag(microlens)
    build-depends:
      , microlens           >=0.4 && <0.5
      , microlens-mtl
      , microlens-platform
      , microlens-th

    cpp-options:   -DUSE_MICROLENS

  else
    build-depends: lens >=3.8 && <5.4

  default-language: Haskell2010

source-repository head
  type:     git
  location: git://github.com/qrilka/xlsx.git

benchmark bench
  type:             exitcode-stdio-1.0
  hs-source-dirs:   benchmarks
  main-is:          Main.hs
  build-depends:
    , base
    , bytestring
    , conduit
    , criterion
    , deepseq
    , lens
    , xlsx

  default-language: Haskell2010
