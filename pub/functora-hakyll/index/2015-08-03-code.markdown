---
id: code
title: Code
color: black
fontawesome: "fab fa-git-alt"
---

<p class="padding-left">Examples of my personal code:</p>

- [currency-converter](https://functora.github.io/apps/currency-converter) - An app for converting currencies, generating financial documents, and sharing them via links or QR codes. It includes optional client-side encryption. Built using Miso and GHCJS, the source code is available on [github](https://github.com/functora/functora.github.io/tree/master/ghcjs/currency-converter).
- [lightning-verifier](https://functora.github.io/apps/lightning-verifier) - An app for offline verification of [Lightning Network](https://lightning.network/) invoices and preimages, and sharing them via links or QR codes. It includes optional client-side encryption. Built using Miso and GHCJS, the source code is available on [github](https://github.com/functora/functora.github.io/tree/master/ghcjs/lightning-verifier).
- [functora](https://github.com/functora/functora.github.io/tree/master/pub/functora) - My own collection of various general-purpose libraries, most of which work with both GHC and GHCJS.
- [bfx](https://github.com/functora/functora.github.io/tree/master/pub/bfx) - Bitfinex cryptocurrency exchange client library for Haskell.
- [rentier](https://github.com/21it/rentier) - My first Haskell project which I have used to learn Haskell. The booking system is based on the Yesod web framework. The code is very obsolete.

<p class="padding-left">Examples of other code I was actively working on with other people:</p>

- [btc-lsp](https://github.com/coingaming/src/tree/master/btc-lsp) - Bitcoin Lightning Service Provider.
- [lnd-client](https://github.com/coingaming/lnd-client) - Lightning Network Daemon (LND) client library for Haskell.
