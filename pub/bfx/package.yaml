name: bfx
version: 0.1.0.0
github: "21it/bfx"
license: BSD3
author: "21it"
maintainer: "21it@protonmail.com"
copyright: "(c) 2021-2022 21it"

extra-source-files:
  - README.md
  - ChangeLog.md

flags:
  ghcid:
    manual: true
    default: false

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Data
# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: Please see the README on GitHub at <https://github.com/21it/bfx#readme>

default-extensions:
  - NoImplicitPrelude
  - MultiParamTypeClasses
  - LambdaCase
  - OverloadedStrings
  - OverloadedLists
  - GeneralizedNewtypeDeriving
  - DerivingStrategies
  - DerivingVia
  - DeriveGeneric
  - DeriveLift
  - QuasiQuotes
  # Singletons
  - DataKinds
  - DefaultSignatures
  - EmptyCase
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - GADTs
  - InstanceSigs
  - KindSignatures
  - NoCUSKs
  - NoNamedWildCards
  - NoStarIsType
  - PolyKinds
  - RankNTypes
  - ScopedTypeVariables
  - StandaloneDeriving
  - StandaloneKindSignatures
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - TupleSections

ghc-options:
  # For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
  # Enable all warnings with -Weverything, then disable the ones we don’t care about
  - -Weverything
  - -Werror
  - -Wno-prepositive-qualified-module
  - -Wno-missing-safe-haskell-mode
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
  - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
  - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don’t use Safe Haskell warnings
  - -Wno-safe # Don’t use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
  - -Wno-missing-kind-signatures
  - -fenable-th-splice-warnings
  - -fprint-potential-instances

_deps: &deps
  dependencies:
    # foundation
    - base >= 4.7 && < 5
    - universum
    - microlens
    # web
    - http-types
    - http-client
    - http-client-tls
    # bytes
    - text
    - aeson
    - lens-aeson
    - memory
    - bytestring
    - base16-bytestring
    - gnuplot
    - reanimate
    - table-layout
    # numbers
    - siggy-chardust
    - combinat
    # other
    - parallel
    - temporary
    - transformers
    - time
    - units
    - witch
    - extra
    - persistent
    - envparse
    - cryptonite
    - unliftio
    - vector
    - template-haskell
    - singletons
    - singletons-base
    - containers
    # pretty
    - katip
    - pretty
    - GenericPretty
    - generic-pretty-instances

_ghcid: &ghcid
  when:
    - condition: flag(ghcid)
      then:
        <<: *deps
        source-dirs:
          - src
        ghc-options:
          - -Wno-unused-packages
      else:
        dependencies:
          - bfx

_optimized: &optimized
  ghc-options:
    - -O2
    - -optc-O3
    - -funfolding-use-threshold=16
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -with-rtsopts=-T
    - -optl-fuse-ld=gold
  ld-options:
    - -fuse-ld=gold

library:
  <<: *deps
  source-dirs:
    - src
  when:
    - condition: flag(ghcid)
      <<: *deps
      source-dirs:
        - src
      ghc-options:
        - -Wno-unused-packages

tests:
  bfx-test:
    <<: *ghcid
    main: Spec.hs
    source-dirs:
      - test
    dependencies:
      - bfx
      - hspec
      - base
      - aeson
      - containers
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
      - -optl-fuse-ld=gold
    ld-options:
      - -fuse-ld=gold
